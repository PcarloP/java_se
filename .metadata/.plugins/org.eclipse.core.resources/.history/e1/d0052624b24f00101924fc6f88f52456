package it.promimpresa.anagrafica.controllo;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.time.LocalDateTime;

import it.promimpresa.anagrafica.modello.Persona;
import it.promimpresa.anagrafica.persistenza.DAOException;
import it.promimpresa.anagrafica.persistenza.persistenza.impl.PersonaDAOImpl;

/**
 * Servlet implementation class Update
 */
@WebServlet("/update")
public class Update extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static PersonaDAOImpl personaDAO = new PersonaDAOImpl();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Update() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		
		 // 1. Prendere l'id della persona da aggiornare (da parametro o default)
	    String idParam = request.getParameter("id");
	    int id = 1; // default se non passato
	
	    if (idParam != null) {
	        try {
	            id = Integer.parseInt(idParam);
	        } catch (NumberFormatException e) {
	            // gestire errore o lasciare default
	        }
	    }
	    
	    try {
	        // 2. Caricare la persona dal database tramite DAO
	        Persona persona = personaDAO.findById(id);
	        
	        // 3. Controllare se persona trovata
	        if (persona != null) {
	            // 4. Passare la persona alla JSP
	            request.setAttribute("persona", persona);
	            // 5. Inoltrare la richiesta alla pagina update.jsp
	            request.getRequestDispatcher("/update.jsp").forward(request, response);
	        } else {
	            // persona non trovata: messaggio ed eventualmente redirect
	            request.setAttribute("messaggio", "Persona non trovata con id: " + id);
	            request.getRequestDispatcher("/dashboard.jsp").forward(request, response);
	        }
	        
	    } catch (DAOException e) {
	        request.setAttribute("messaggio", "Errore nel caricamento persona.");
	        request.getRequestDispatcher("/dashboard.jsp").forward(request, response);
	    }
	    
	    
		
	
	
	
	
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		try {
			System.out.println("=== Update ===");
			Persona persona = personaDAO.findById(1);
			if (persona != null) {
				persona.setCF("New CF1");
				persona.setNome("New Nome 1");
				persona.setCognome(" New Cognome 1");
				persona.setDataNascita(LocalDateTime.of(2000, 03, 05, 06, 05, 00));
				personaDAO.update(persona);
			}
		} catch (DAOException e) {
			System.out.println("Ops...si Ã¨ verificato un errore!");
		}
	
		
		
		
		doGet(request, response);
	}

}
